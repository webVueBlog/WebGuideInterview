(window.webpackJsonp=window.webpackJsonp||[]).push([[159],{750:function(e,t,_){"use strict";_.r(t);var s=_(6),v=Object(s.a)({},(function(){var e=this,t=e.$createElement,_=e._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h2",{attrs:{id:"腾讯一面-概述一下node中的进程与线程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#腾讯一面-概述一下node中的进程与线程"}},[e._v("#")]),e._v(" 腾讯一面-概述一下Node中的进程与线程")]),e._v(" "),_("p",[e._v("Node.js 中的进程 Process 是一个全局对象，无需 require 直接使用，给我们提供了当前进程中的相关信息。Node.js 中进程可以使用 child_process 模块创建。")]),e._v(" "),_("p",[e._v("关系：")]),e._v(" "),_("p",[e._v("• 一个线程只能属于一个进程，而一个进程可以有多个线程，但至少有一个线程（通常说的主线程）。")]),e._v(" "),_("p",[e._v("• 同一进程的所有线程共享该进程的所有资源。")]),e._v(" "),_("p",[e._v("• 进程在执行过程中，需要协作同步。不同进程的线程间要利用消息通信的办法实现同步。")]),e._v(" "),_("p",[e._v("• 处理机分给线程，即真正在处理机上运行的是线程。")]),e._v(" "),_("p",[e._v("• 线程是指进程内的一个执行单元，也是进程内的可调度实体。")]),e._v(" "),_("p",[e._v("区别：")]),e._v(" "),_("p",[e._v("• 调度：线程作为调度和分配的基本单位，进程作为拥有资源的基本单位。")]),e._v(" "),_("p",[e._v("• 拥有资源：进程是拥有资源的一个独立单位，线程不拥有系统资源，但可以访问隶属于进程的资源。")])])}),[],!1,null,null,null);t.default=v.exports}}]);