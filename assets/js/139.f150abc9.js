(window.webpackJsonp=window.webpackJsonp||[]).push([[139],{731:function(e,t,o){"use strict";o.r(t);var s=o(6),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h2",{attrs:{id:"cookie-token-session的区别"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#cookie-token-session的区别"}},[e._v("#")]),e._v(" cookie-token-session的区别")]),e._v(" "),o("p",[e._v("三者通常都用于用户的身份校验。")]),e._v(" "),o("p",[e._v("session")]),e._v(" "),o("p",[e._v("服务端生成,存储于服务端的内存中,长时间不使用会过期,服务端会通过session判断请求是否来自同一个客户端")]),e._v(" "),o("p",[e._v("cookie")]),e._v(" "),o("p",[e._v("一般也由服务端生成,存储在客户端,每次请求都会自动附上这个值")]),e._v(" "),o("p",[e._v("请求同域下的静态资源也会附上,会损耗资源")]),e._v(" "),o("p",[e._v("token")]),e._v(" "),o("p",[e._v("服务端生成,服务端可以不做存储,也可以做存储")]),e._v(" "),o("p",[e._v("不做存储")]),e._v(" "),o("p",[e._v("在 token中加入用户身份识别信息,过期时间,时间戳等等内容,然后进行过加密传输给客户端,\n需要身份校验的接口,服务端就判断请求头是是否附带有token,如果有取出来解密然后执行后续操作")]),e._v(" "),o("p",[e._v("做存储")]),e._v(" "),o("p",[e._v("生成一段不重复的加密字符串token作为key,然后存放在服务端(通常是用redis,服务端重启也不会丢失用户的登录状态)使用key-value形式,value是用户信息,然后将token(key)发给客户端")])])}),[],!1,null,null,null);t.default=n.exports}}]);