(window.webpackJsonp=window.webpackJsonp||[]).push([[443],{1037:function(s,t,a){"use strict";a.r(t);var e=a(6),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"flow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flow"}},[s._v("#")]),s._v(" Flow")]),s._v(" "),a("p",[s._v("Vue.js 的源码利用了 Flow 做了静态类型检查")]),s._v(" "),a("p",[s._v("JavaScript 是动态类型语言")]),s._v(" "),a("p",[s._v("类型检查是当前动态类型语言的发展趋势，所谓类型检查，就是在编译期尽早发现（由类型错误引起的）bug，又不影响代码运行（不需要运行时动态检查类型），使编写 JavaScript 具有和编写 Java 等强类型语言相近的体验。")]),s._v(" "),a("p",[s._v("项目越复杂就越需要通过工具的手段来保证项目的维护性和增强代码的可读性。")]),s._v(" "),a("p",[s._v("Babel 和 ESLint 都有对应的 Flow 插件以支持语法，可以完全沿用现有的构建配置")]),s._v(" "),a("h3",{attrs:{id:"flow-的工作方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flow-的工作方式"}},[s._v("#")]),s._v(" Flow 的工作方式")]),s._v(" "),a("p",[s._v("通常类型检查分成 2 种方式：类型推断， 类型注释")]),s._v(" "),a("p",[s._v("类型注释是以冒号 : 开头，可以在函数参数，返回值，变量声明中使用。")]),s._v(" "),a("p",[s._v("可以对类自身的属性做类型检查，也可以对构造函数的参数做类型检查。")]),s._v(" "),a("p",[s._v("若想任意类型 T 可以为 null 或者 undefined，只需类似如下写成 ?T 的格式即可。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*@flow*/")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("string "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("https://flow.org/en/docs/types/")]),s._v(" "),a("h3",{attrs:{id:"flow-在-vue-js-源码中的应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flow-在-vue-js-源码中的应用"}},[s._v("#")]),s._v(" Flow 在 Vue.js 源码中的应用")]),s._v(" "),a("p",[s._v("Flow 提出了一个 libdef 的概念，可以用来识别这些第三方库或者是自定义类型")]),s._v(" "),a("p",[s._v("静态类型检查的方式非常有利于大型项目源码的开发和维护。")])])}),[],!1,null,null,null);t.default=r.exports}}]);