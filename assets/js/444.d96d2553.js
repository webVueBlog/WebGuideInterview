(window.webpackJsonp=window.webpackJsonp||[]).push([[444],{1039:function(t,s,a){"use strict";a.r(s);var e=a(6),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"vue-router"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-router"}},[t._v("#")]),t._v(" Vue-Router")]),t._v(" "),a("h3",{attrs:{id:"_1-introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-introduction"}},[t._v("#")]),t._v(" 1. introduction")]),t._v(" "),a("p",[t._v("Vue-Router 的能力十分强大，它支持 hash、history、abstract 3 种路由方式，提供了 和 2 种组件，还提供了简单的路由配置和一系列好用的 API。")]),t._v(" "),a("h3",{attrs:{id:"_2-路由注册"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-路由注册"}},[t._v("#")]),t._v(" 2. 路由注册")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Vue.use")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Vue")]),t._v(" 提供了 "),a("code",[t._v("Vue.use")]),t._v(" 的全局 "),a("code",[t._v("API")]),t._v(" 来注册这些插件，比如注册 "),a("code",[t._v("VueRouter。")])])])]),t._v(" "),a("li",[t._v("路由安装\n"),a("ul",[a("li",[a("code",[t._v("VueRouter")]),t._v(" 本质上是一个类，实现了 "),a("code",[t._v("install")]),t._v(" 的静态方法："),a("code",[t._v("VueRouter.install = install")]),t._v("，当执行 "),a("code",[t._v("Vue.use(VueRouter)")]),t._v(" 的时候，实际上就是在执行 "),a("code",[t._v("install")]),t._v(" 函数")]),t._v(" "),a("li",[a("code",[t._v("Vue-Router")]),t._v(" 安装最重要的一步就是利用 "),a("code",[t._v("Vue.mixin")]),t._v(" 去把 "),a("code",[t._v("beforeCreate")]),t._v(" 和 "),a("code",[t._v("destroyed")]),t._v(" 钩子函数注入到每一个组件中。")]),t._v(" "),a("li",[t._v("通过 "),a("code",[t._v("Vue.component")]),t._v(" 方法定义了全局的 和 2 个组件，这也是为什么我们在写模板的时候可以使用这两个标签")])])])]),t._v(" "),a("h3",{attrs:{id:"_3-vuerouter-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-vuerouter-对象"}},[t._v("#")]),t._v(" 3. VueRouter 对象")]),t._v(" "),a("ul",[a("li",[t._v("VueRouter 的实现是一个类，定义了一些属性和方法。")]),t._v(" "),a("li",[t._v("当我们执行 new VueRouter 的时候\n"),a("ul",[a("li",[t._v("在浏览器不支持 "),a("code",[t._v("history.pushState")]),t._v(" 的情况下，根据传入的 fallback 配置参数，决定是否回退到 hash 模式。")]),t._v(" "),a("li",[t._v("实例化 "),a("code",[t._v("VueRouter")]),t._v(" 后会返回它的实例 "),a("code",[t._v("router")])])])]),t._v(" "),a("li",[t._v("组件在执行 "),a("code",[t._v("beforeCreate")]),t._v(" 钩子函数的时候，如果传入了 "),a("code",[t._v("router")]),t._v(" 实例，都会执行 "),a("code",[t._v("router.init")]),t._v(" 进行初始化。")]),t._v(" "),a("li",[t._v("然后又会执行 history.transitionTo 方法做路由过渡，进而引出了 matcher 的概念。")])]),t._v(" "),a("h3",{attrs:{id:"_4-matcher"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-matcher"}},[t._v("#")]),t._v(" 4. matcher")]),t._v(" "),a("ul",[a("li",[t._v("createMatcher\n"),a("ul",[a("li",[t._v("createMatcher 的初始化就是根据路由的配置描述建立映射表，包括路径、名称到路由 record 的映射关系。")])])]),t._v(" "),a("li",[t._v("addRoutes\n"),a("ul",[a("li",[t._v("addRoutes 方法的作用是动态添加路由配置，因为在实际开发中有些场景是不能提前把路由写死的，需要根据一些条件动态添加路由\n"),a("ul",[a("li",[a("code",[t._v("function addRoutes (routes) { createRouteMap(routes, pathList, pathMap, nameMap) }")])]),t._v(" "),a("li",[t._v("addRoutes 的方法十分简单，再次调用 createRouteMap 即可，传入新的 routes 配置，由于 pathList、pathMap、nameMap 都是引用类型，执行 addRoutes 后会修改它们的值。")])])])])]),t._v(" "),a("li",[t._v("match\n"),a("ul",[a("li",[t._v("match 会根据传入的位置和路径计算出新的位置并匹配到相应的路由 record ，然后根据新的位置 和 record 创建新的路径并返回。")]),t._v(" "),a("li",[t._v("通过 matcher 的 match 方法，我们会找到匹配的路径 Route，这个对 Route 的切换，组件的渲染都有非常重要的指导意义。")])])])]),t._v(" "),a("h3",{attrs:{id:"_5-路径切换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-路径切换"}},[t._v("#")]),t._v(" 5. 路径切换")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("history.transitionTo")]),t._v(" "),a("ul",[a("li",[t._v("分析了 "),a("code",[t._v("matcher")]),t._v(" 的相关实现，知道它是如何找到匹配的新线路，那么匹配到新线路后，当我们切换路由线路的时候，就会执行到方法 "),a("code",[t._v("transitionTo。")])]),t._v(" "),a("li",[t._v("拿到新的路径后，那么接下来就会执行 "),a("code",[t._v("confirmTransition")]),t._v(" 方法去做真正的切换，由于这个过程可能有一些异步的操作（如异步组件），所以整个 "),a("code",[t._v("confirmTransition")]),t._v(" "),a("code",[t._v("API")]),t._v(" 设计成带有成功回调函数和失败回调函数。")]),t._v(" "),a("li",[t._v("拿到 "),a("code",[t._v("updated、activated、deactivated")]),t._v(" 3 个 "),a("code",[t._v("ReouteRecord")]),t._v(" 数组后，接下来就是路径变换后的一个重要部分，执行一系列的钩子函数，也就是导航守卫。")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("导航守卫")])]),a("p",[t._v("实际上就是发生在路由路径切换的时候，执行的一系列钩子函数。")]),t._v(" "),a("blockquote",[a("p",[t._v("完整的导航解析流程")])]),t._v(" "),a("ul",[a("li",[t._v("导航被触发。")]),t._v(" "),a("li",[t._v("在失活的组件里调用离开守卫。")]),t._v(" "),a("li",[t._v("调用全局的 beforeEach 守卫。")]),t._v(" "),a("li",[t._v("在重用的组件里调用 beforeRouteUpdate 守卫 (2.2+)。")]),t._v(" "),a("li",[t._v("在路由配置里调用 beforeEnter。")]),t._v(" "),a("li",[t._v("解析异步路由组件。")]),t._v(" "),a("li",[t._v("在被激活的组件里调用 beforeRouteEnter。")]),t._v(" "),a("li",[t._v("调用全局的 beforeResolve 守卫 (2.5+)。")]),t._v(" "),a("li",[t._v("导航被确认。")]),t._v(" "),a("li",[t._v("调用全局的 afterEach 钩子。")]),t._v(" "),a("li",[t._v("触发 DOM 更新。")]),t._v(" "),a("li",[t._v("用创建好的实例调用 beforeRouteEnter 守卫中传给 next 的回调函数。")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("url ( hash 模式 )")])]),a("ul",[a("li",[t._v("当我们点击 router-link 的时候，实际上最终会执行 router.push。")]),t._v(" "),a("li",[t._v("push 函数会先执行 this.transitionTo 做路径切换，在切换完成的回调函数中，执行 pushHash 函数")]),t._v(" "),a("li",[t._v("pushState 会调用浏览器原生的 history 的 pushState 接口或者 replaceState 接口，更新浏览器的 url 地址，并把当前 url 压入历史栈中。")]),t._v(" "),a("li",[t._v("ensureSlash\n"),a("ul",[a("li",[t._v("开发项目时，打开调试页面 http://localhost:8080 后会自动把 url 修改为 http://localhost:8080/#/。这是因为在实例化 HashHistory 的时候，构造函数会执行 ensureSlash() 方法，修改了 url 的原因。")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("组件")])]),t._v(" "),a("p",[t._v("路由最终的渲染离不开组件，Vue-Router 内置了 组件。 是一个 functional 组件，它的渲染也是依赖 render 函数。")]),t._v(" "),a("ol",[a("li",[t._v("是支持嵌套的，回到 render 函数，其中定义了 depth 的概念，它表示 嵌套的深度。")]),t._v(" "),a("li",[t._v("每个 在渲染的时候，会进行一个循环，就是从当前的 的父节点向上找，一直找到根 Vue 实例，在这个过程，如果碰到了父节点也是 的时候，说明 有嵌套的情况，depth++。遍历完成后，根据当前线路匹配的路径和 depth 找到对应的 RouteRecord，进而找到该渲染的组件。")]),t._v(" "),a("li",[t._v("注册路由实例")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("registerInstance")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callVal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_parentVnode\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isDef")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isDef")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isDef")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("registerRouteInstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nVue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mixin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeCreate")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("destroyed")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br")])]),a("p",[t._v("在混入的 "),a("code",[t._v("beforeCreate")]),t._v(" 钩子函数中，会执行 "),a("code",[t._v("registerInstance")]),t._v(" 方法，进而执行 "),a("code",[t._v("render")]),t._v(" 函数中定义的 "),a("code",[t._v("registerRouteInstance")]),t._v(" 方法，从而给 "),a("code",[t._v("matched.instances[name]")]),t._v(" 赋值当前组件的 "),a("code",[t._v("vm")]),t._v(" 实例。")]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("render 函数的最后根据 component 渲染出对应的组件 vonde：")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("h")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("component"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" children"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ol",{attrs:{start:"5"}},[a("li",[a("p",[t._v("当我们执行 transitionTo 来更改路由线路后，组件是如何重新渲染 ？")])]),t._v(" "),a("li",[a("p",[t._v("在 Vue 混入的 beforeCreate 钩子函数中，我们把根 Vue 实例的 _route 属性定义成响应式的了。")])])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isDef")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("router"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Vue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineReactive")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_route'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_router"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("history"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("访问 this._routerRoot._route，触发了它的 getter，相当于 对它有依赖，然后再执行完 transitionTo 后，修改 app._route 的时候，又触发了setter，因此会通知 的渲染 watcher 更新，重新渲染组件。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("Vue-Router 还内置了另一个组件 ，它支持用户在具有路由功能的应用中（点击）导航。")]),t._v(" "),a("p",[t._v("通过 to 属性指定目标地址，默认渲染成带有正确链接的 标签，可以通过配置 tag 属性生成别的标签。")]),t._v(" "),a("p",[t._v("另外，当目标路由成功激活时，链接元素自动设置一个表示激活的 CSS 类名。")])]),a("ol",[a("li",[t._v("首先做了路由解析")]),t._v(" "),a("li",[t._v("router.resolve 计算出最终跳转的 href")]),t._v(" "),a("li",[t._v("对 exactActiveClass 和 activeClass 做处理")]),t._v(" "),a("li",[t._v("创建了一个守卫函数 handler，最终会监听点击事件或者其它可以通过 prop 传入的事件类型，执行 hanlder 函数，最终执行 router.push 或者 router.replace 函数\n实际上就是执行了 history 的 push 和 replace 方法做路由跳转。")]),t._v(" "),a("li",[t._v("最后判断当前 tag 是否是 标签， 默认会渲染成 标签，当然我们也可以修改 tag 的 prop 渲染成其他节点，这种情况下会尝试找它子元素的 标签，如果有则把事件绑定到 标签上并添加 href 属性，否则绑定到外层元素本身。")])]),t._v(" "),a("h3",{attrs:{id:"_6-总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-总结"}},[t._v("#")]),t._v(" 6. 总结")]),t._v(" "),a("p",[t._v("路由始终会维护当前的线路，路由切换的时候会把当前线路切换到目标线路，切换过程中会执行一系列的导航守卫钩子函数，会更改 url，同样也会渲染对应的组件，切换完毕后会把目标线路更新替换当前线路，这样就会作为下一次的路径切换的依据。")])])}),[],!1,null,null,null);s.default=n.exports}}]);