(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{723:function(s,t,a){"use strict";a.r(t);var n=a(6),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"umi-如何工作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#umi-如何工作"}},[s._v("#")]),s._v(" Umi 如何工作？")]),s._v(" "),a("p",[s._v(".umi 临时文件\n.umi 临时目录是整个 Umi 项目的发动机，你的入口文件、路由等等都在这里，这些是由 umi 内部插件及三方插件生成的。")]),s._v(" "),a("p",[s._v("你通常会在 .umi 下看到以下目录，")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("umi\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" core     # 内部插件生成\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" pluginA  # 外部插件生成\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" presetB  # 外部插件生成\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" umi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ts   # 入口文件\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("临时文件是 Umi 框架中非常重要的一部分，框架或插件会根据你的代码生成临时文件，这些原来需要放在项目里的脏乱差的部分都被藏在了这里。")]),s._v(" "),a("p",[s._v("你可以在这里调试代码，但不要在 .git 仓库里提交他，因为他的临时性，每次启动 umi 时都会被删除并重新生成。")])])}),[],!1,null,null,null);t.default=e.exports}}]);