(window.webpackJsonp=window.webpackJsonp||[]).push([[200],{793:function(t,e,v){"use strict";v.r(e);var a=v(6),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"动态作用域"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#动态作用域"}},[t._v("#")]),t._v(" 动态作用域")]),t._v(" "),v("p",[t._v("JavaScript 中的作用域就是词法 作用域")]),t._v(" "),v("p",[t._v("词法作用域是一套关于引擎如何寻找变量以及会在何处找到变量的规 则。")]),t._v(" "),v("p",[t._v("词法作用域最重要的特征是它的定义过程发生在代码的书写阶段（假设你没有使用 eval() 或 with）")]),t._v(" "),v("p",[t._v("动态作用域并不关心函数和作用域是如何声明以及在何处声明的，只关心它们从何处调 用。")]),t._v(" "),v("p",[t._v("作用域链是基于调用栈的，而不是代码中的作用域嵌套。")]),t._v(" "),v("p",[t._v("词法作用域是在写代码或者说定义时确定的，而动态作用域是在运行时确定 的。")]),t._v(" "),v("p",[t._v("词法作用域关注函数在何处声明，而动态作用域关注函数从何处调用。")])])}),[],!1,null,null,null);e.default=r.exports}}]);